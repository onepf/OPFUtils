/*
 * Copyright 2012-2014 One Platform Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'idea'
apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.library'
apply plugin: 'com.noveogroup.android.check'
apply plugin: 'jacoco'
apply from: 'https://raw.githubusercontent.com/onepf/OPF-mvn-repo/master/OPF-mvn-push.gradle'

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "0.1.20-SNAPSHOT"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError true
        checkAllWarnings true
        warningsAsErrors true
        disable
    }
    
    sourceSets {
        androidTest.java.srcDirs += 'src/test/java'
    }
    
    jacoco {
        version "0.7.1.201405082137"
    }
}

check {
    abortOnError true

    checkstyle {
        config rootProject.file('config/checkstyle.xml')
    }

    pmd {
        config rootProject.file('config/pmd.xml')
    }
}


build {
    doLast {
        jacocoTestReport.execute()
    }
}

jacoco {
    toolVersion "0.7.1.201405082137"
}

def coverageSourceDirs = [
        'src/main/java',
]

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true
        html.enabled = true
    }
    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: ['**/R*.class'])
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("$buildDir/jacoco/testDebug.exec")
    // Bit hacky but fixes https://code.google.com/p/android/issues/detail?id=69174.
    // We iterate through the compiled .class tree and rename $$ to $.
    doFirst {
        new File("$buildDir/intermediates/classes/").eachFileRecurse { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }

    doLast {
        println 'Wrote HTML jacoco report to file:' + projectDir + "/build/reports/jacoco/jacocoTestReport/html/index.html"
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    androidTestCompile 'junit:junit:4.12'
    //noinspection NewerVersionAvailable
    androidTestCompile 'org.robolectric:robolectric:3.0-rc2'
    androidTestCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile 'junit:junit:4.12'
    //noinspection NewerVersionAvailable
    testCompile 'org.robolectric:robolectric:3.0-rc2'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'

    compile 'com.android.support:support-annotations:21.0.3'
}
